var searchIndex = {};
searchIndex['mjoin'] = {"items":[],"paths":[]};
searchIndex['hjoin'] = {"items":[],"paths":[]};
searchIndex['joinkit'] = {"items":[[0,"","joinkit","Joinkit provides iterator adaptors for efficient SQL-like joins.",null,null],[3,"MergeJoinInner","","See [`merge_join_inner_by()`](trait.Joinkit.html#method.merge_join_inner_by) for the description and\nexamples.",null,null],[3,"MergeJoinLeftExcl","","See [`merge_join_left_excl_by()`](trait.Joinkit.html#method.merge_join_left_excl_by) for the\ndescription and examples.",null,null],[3,"MergeJoinLeftOuter","","See [`merge_join_left_outer_by()`](trait.Joinkit.html#method.merge_join_left_outer_by) for the\ndescription and examples.",null,null],[3,"MergeJoinFullOuter","","See [`merge_join_full_outer_by()`](trait.Joinkit.html#method.merge_join_full_outer_by) for the\ndescription and examples.",null,null],[3,"HashJoinInner","","See [`hash_join_inner()`](trait.Joinkit.html#method.hash_join_inner) for the description and\nexamples.",null,null],[3,"HashJoinLeftExcl","","See [`hash_join_left_excl()`](trait.Joinkit.html#method.hash_join_left_excl) for the\ndescription and examples.",null,null],[3,"HashJoinLeftOuter","","See [`hash_join_left_outer()`](trait.Joinkit.html#method.hash_join_left_outer) for the\ndescription and examples.",null,null],[3,"HashJoinRightExcl","","See [`hash_join_right_excl()`](trait.Joinkit.html#method.hash_join_right_excl) for the\ndescription and examples.",null,null],[3,"HashJoinRightOuter","","See [`hash_join_right_outer()`](trait.Joinkit.html#method.hash_join_right_outer) for the\ndescription and examples.",null,null],[3,"HashJoinFullOuter","","See [`hash_join_full_outer()`](trait.Joinkit.html#method.hash_join_full_outer) for the\ndescription and examples.",null,null],[4,"EitherOrBoth","","A value yielded by `merge_join` and `hash_join` outer iterators.\nContains one or two values, depending on which input iterator is exhausted.",null,null],[13,"Both","","Neither input iterator is exhausted yet, yielding two values.",0,null],[13,"Left","","The parameter iterator is exhausted, only yielding a value from the `self` iterator.",0,null],[13,"Right","","The `self` iterator is exhausted, only yielding a value from the parameter iterator.",0,null],[0,"util","","This module contains various utilities/helper functions",null,null],[5,"rec_sep_as_byte","joinkit::util","Converts a record separator to a single byte",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"fields_to_idx","","Parses a string containing the fields indices in base1 and tries to convert them into vector of\n2-element tuples.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"extract_key","","Extracts a key from the record.",null,null],[5,"extract_key_value","","Extracts a key from the record and returns a tuple of the key and the record.",null,null],[5,"num_fields","","Returns a number of fields in the record.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"usize"}}],[5,"write_both","","Writes both, the left value and the right value into output stream.",null,null],[5,"write_left","","Writes only the left value with padded field separators in place of missing right value.",null,null],[5,"write_right","","Writes only the right value with padded field separators in place of missing left value.",null,null],[11,"new","joinkit","Create a `MergeJoinInner` iterator.",1,{"inputs":[{"name":"mergejoininner"},{"name":"li"},{"name":"ri"},{"name":"f"}],"output":{"name":"self"}}],[11,"next","","",1,{"inputs":[{"name":"mergejoininner"}],"output":{"name":"option"}}],[11,"new","","Create a `MergeJoinLeftExcl` iterator.",2,{"inputs":[{"name":"mergejoinleftexcl"},{"name":"li"},{"name":"ri"},{"name":"f"}],"output":{"name":"self"}}],[11,"next","","",2,{"inputs":[{"name":"mergejoinleftexcl"}],"output":{"name":"option"}}],[11,"new","","Create a `MergeJoinLeftOuter` iterator.",3,{"inputs":[{"name":"mergejoinleftouter"},{"name":"li"},{"name":"ri"},{"name":"f"}],"output":{"name":"self"}}],[11,"next","","",3,{"inputs":[{"name":"mergejoinleftouter"}],"output":{"name":"option"}}],[11,"new","","Create a `MergeJoinFullOuter` iterator.",4,{"inputs":[{"name":"mergejoinfullouter"},{"name":"li"},{"name":"ri"},{"name":"f"}],"output":{"name":"self"}}],[11,"next","","",4,{"inputs":[{"name":"mergejoinfullouter"}],"output":{"name":"option"}}],[11,"new","","Create a `HashJoinInner` iterator.",5,{"inputs":[{"name":"hashjoininner"},{"name":"li"},{"name":"ri"}],"output":{"name":"self"}}],[11,"next","","",5,{"inputs":[{"name":"hashjoininner"}],"output":{"name":"option"}}],[11,"new","","Create a `HashJoinLeftExcl` iterator.",6,{"inputs":[{"name":"hashjoinleftexcl"},{"name":"li"},{"name":"ri"}],"output":{"name":"self"}}],[11,"next","","",6,{"inputs":[{"name":"hashjoinleftexcl"}],"output":{"name":"option"}}],[11,"new","","Create a `HashJoinLeftOuter` iterator.",7,{"inputs":[{"name":"hashjoinleftouter"},{"name":"li"},{"name":"ri"}],"output":{"name":"self"}}],[11,"next","","",7,{"inputs":[{"name":"hashjoinleftouter"}],"output":{"name":"option"}}],[11,"new","","Create a `HashJoinRightExcl` iterator.",8,{"inputs":[{"name":"hashjoinrightexcl"},{"name":"li"},{"name":"ri"}],"output":{"name":"self"}}],[11,"next","","",8,{"inputs":[{"name":"hashjoinrightexcl"}],"output":{"name":"option"}}],[11,"new","","Create a `HashJoinRightOuter` iterator.",9,{"inputs":[{"name":"hashjoinrightouter"},{"name":"li"},{"name":"ri"}],"output":{"name":"self"}}],[11,"next","","",9,{"inputs":[{"name":"hashjoinrightouter"}],"output":{"name":"option"}}],[11,"new","","Create a `HashJoinFullOuter` iterator.",10,{"inputs":[{"name":"hashjoinfullouter"},{"name":"li"},{"name":"ri"}],"output":{"name":"self"}}],[11,"next","","",10,{"inputs":[{"name":"hashjoinfullouter"}],"output":{"name":"option"}}],[8,"Joinkit","","Trait `Joinkit` provides the extra iterator adaptors for efficient SQL-like joins.",null,null],[11,"merge_join_inner_by","","Return an iterator adaptor that [inner\njoins](https://en.wikipedia.org/wiki/Join_%28SQL%29#Inner_join) the two input iterators in\nascending order. The resulting iterator is the intersection of the two input iterators.",11,{"inputs":[{"name":"joinkit"},{"name":"r"},{"name":"f"}],"output":{"name":"mergejoininner"}}],[11,"merge_join_left_excl_by","","Return an iterator adaptor that *left exclusive joins* the two input iterators in\nascending order. The resulting iterator contains only those records from the left input\niterator, which do not match the right input iterator. There is no direct equivalent in\nSQL.",11,{"inputs":[{"name":"joinkit"},{"name":"r"},{"name":"f"}],"output":{"name":"mergejoinleftexcl"}}],[11,"merge_join_left_outer_by","","Return an iterator adaptor that [left outer\njoins](https://en.wikipedia.org/wiki/Join_%28SQL%29#Left_outer_join) the two input iterators\nin ascending order. The resulting iterator contains all the records from the left input\niterator, even if they do not match the right input iterator.",11,{"inputs":[{"name":"joinkit"},{"name":"r"},{"name":"f"}],"output":{"name":"mergejoinleftouter"}}],[11,"merge_join_full_outer_by","","Return an iterator adaptor that [full outer\njoins](https://en.wikipedia.org/wiki/Join_%28SQL%29#Full_outer_join) the two input iterators\nin ascending order. The resulting iterator contains all the records from the both input\niterators.",11,{"inputs":[{"name":"joinkit"},{"name":"r"},{"name":"f"}],"output":{"name":"mergejoinfullouter"}}],[11,"hash_join_inner","","Return an iterator adaptor that [inner\njoins](https://en.wikipedia.org/wiki/Join_%28SQL%29#Inner_join) the two input iterators in\nascending order. The resulting iterator is the intersection of the two input iterators.",11,{"inputs":[{"name":"joinkit"},{"name":"ri"}],"output":{"name":"hashjoininner"}}],[11,"hash_join_left_excl","","Return an iterator adaptor that *left exclusive joins* the two input iterators. The\nresulting iterator contains only those records from the left input iterator, which do not\nmatch the right input iterator. There is no direct equivalent in SQL.",11,{"inputs":[{"name":"joinkit"},{"name":"ri"}],"output":{"name":"hashjoinleftexcl"}}],[11,"hash_join_left_outer","","Return an iterator adaptor that [left outer\njoins](https://en.wikipedia.org/wiki/Join_%28SQL%29#Left_outer_join) the two input\niterators.  The resulting iterator contains all the records from the left input iterator,\neven if they do not match the right input iterator.",11,{"inputs":[{"name":"joinkit"},{"name":"ri"}],"output":{"name":"hashjoinleftouter"}}],[11,"hash_join_right_excl","","Return an iterator adaptor that *right exclusive joins* the two input iterators. The resulting\niterator contains only those records from the right input iterator, which do not match the\nleft input iterator. There is no direct equivalent in SQL.",11,{"inputs":[{"name":"joinkit"},{"name":"ri"}],"output":{"name":"hashjoinrightexcl"}}],[11,"hash_join_right_outer","","Return an iterator adaptor that [right outer\njoins](https://en.wikipedia.org/wiki/Join_%28SQL%29#Right_outer_join) the two input\niterators.  The resulting iterator contains all the records from the right input iterator,\neven if they do not match the left input iterator.",11,{"inputs":[{"name":"joinkit"},{"name":"ri"}],"output":{"name":"hashjoinrightouter"}}],[11,"hash_join_full_outer","","Return an iterator adaptor that [full outer\njoins](https://en.wikipedia.org/wiki/Join_%28SQL%29#Full_outer_join) the two input\niterators.  The resulting iterator contains all the records from the both input iterators.",11,{"inputs":[{"name":"joinkit"},{"name":"ri"}],"output":{"name":"hashjoinfullouter"}}],[11,"fmt","","",0,{"inputs":[{"name":"eitherorboth"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"eitherorboth"},{"name":"eitherorboth"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"eitherorboth"},{"name":"eitherorboth"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"eitherorboth"}],"output":{"name":"eitherorboth"}}]],"paths":[[4,"EitherOrBoth"],[3,"MergeJoinInner"],[3,"MergeJoinLeftExcl"],[3,"MergeJoinLeftOuter"],[3,"MergeJoinFullOuter"],[3,"HashJoinInner"],[3,"HashJoinLeftExcl"],[3,"HashJoinLeftOuter"],[3,"HashJoinRightExcl"],[3,"HashJoinRightOuter"],[3,"HashJoinFullOuter"],[8,"Joinkit"]]};
initSearch(searchIndex);
